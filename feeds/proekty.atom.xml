<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Портфолио - Проекты</title><link href="https://aw-sea.github.io/portfolio/" rel="alternate"/><link href="https://aw-sea.github.io/portfolio/feeds/proekty.atom.xml" rel="self"/><id>https://aw-sea.github.io/portfolio/</id><updated>2025-08-20T00:00:00+03:00</updated><entry><title>Выбор Grav CMS для патриотического сайта: от идеи до реализации</title><link href="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/" rel="alternate"/><published>2025-08-20T00:00:00+03:00</published><updated>2025-08-20T00:00:00+03:00</updated><author><name>admin</name></author><id>tag:aw-sea.github.io,2025-08-20:/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/</id><summary type="html">&lt;h1&gt;Выбор Grav CMS для патриотического сайта: от идеи до реализации&lt;/h1&gt;
&lt;h2&gt;Неожиданный заказ&lt;/h2&gt;
&lt;p&gt;Я еще не искала заказы активно, но один проект нашел меня сам — по сарафанному радио. Человеку понадобился сайт, и мой друг рассказал обо мне. Задача была интересной: создать сайт-блог новостей без базы данных, регистрации и комментариев. &lt;/p&gt;
&lt;p&gt;Нужно было …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Выбор Grav CMS для патриотического сайта: от идеи до реализации&lt;/h1&gt;
&lt;h2&gt;Неожиданный заказ&lt;/h2&gt;
&lt;p&gt;Я еще не искала заказы активно, но один проект нашел меня сам — по сарафанному радио. Человеку понадобился сайт, и мой друг рассказал обо мне. Задача была интересной: создать сайт-блог новостей без базы данных, регистрации и комментариев. &lt;/p&gt;
&lt;p&gt;Нужно было публиковать новости региона о патриотических событиях: мероприятия ко Дню Победы, Дни памяти, Дни Славы России и подобные события. Также требовался удобный каталог памятных мест области с простой навигацией для пользователей.&lt;/p&gt;
&lt;p&gt;Ключевым требованием была удобная и понятная админ-панель для заказчика, чтобы он мог самостоятельно добавлять статьи без технических сложностей.&lt;/p&gt;
&lt;h2&gt;Поиск подходящего инструмента&lt;/h2&gt;
&lt;p&gt;Конструкторы сайтов я использовать не хотела — они слишком ограничивают в возможностях. Мой уже освоенный Django был избыточным для такого простого проекта. Стала искать варианты и обратила внимание на генераторы статических сайтов.&lt;/p&gt;
&lt;p&gt;Как Python-разработчик, я сначала рассмотрела Pelican и MkDocs. В целом они подходили для задачи, но был один существенный недостаток — реализация админ-панели. Нужно было подключать сторонние библиотеки, но ничего не подошло: одна была только на английском (что неудобно для заказчика), другая слишком сложна в установке и настройке. Проблема требовала решения.&lt;/p&gt;
&lt;h2&gt;Открытие Grav CMS&lt;/h2&gt;
&lt;p&gt;Поиски привели меня к Grav CMS — flat-file CMS, где все данные (страницы, настройки, пользователи) хранятся в файлах без использования базы данных. На странице загрузок предлагалось скачать чистую CMS или версию с предустановленным плагином для админки.&lt;/p&gt;
&lt;p&gt;Меня впечатлило:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Простота установки&lt;/strong&gt; на хостинг&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Наличие каталога плагинов&lt;/strong&gt; для разных задач&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Поддержка русского языка&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Удобная админ-панель&lt;/strong&gt; «из коробки»&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="article-image image-small float-left"&gt;
    &lt;a href="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/images/gravad.png" data-lightbox="gallery" data-title="Описание" class="image-lightbox"&gt;
        &lt;img class="image-framed image-small" src="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/images/gravad.png" alt="Описание" width="600"&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;Нажмите для увеличения&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;В чистом виде работа с Grav напоминает генераторы статических сайтов — для добавления страниц нужно создавать markdown-файлы. Можно было выбрать готовую тему (большинство платные) или написать свою. Я создавала свою, под конкретные требования заказчика.&lt;/p&gt;
&lt;h2&gt;Создание структуры сайта&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Главная страница&lt;/strong&gt; стала новостной лентой с публикациями о проведенных мероприятиях. Она содержит блоки с фотографиями новостей и заголовками — при клике открывается полное описание. В Grav это делается очень просто: при создании главной страницы указывается тип «блог» и прописывается источник статей. Автоматическое обновление при добавлении новых материалов работает идеально.&lt;/p&gt;
&lt;figure class="article-image image-small float-left"&gt;
    &lt;a href="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/images/zhit-pomnit-01.png" data-lightbox="gallery" data-title="Описание" class="image-lightbox"&gt;
        &lt;img class="image-framed image-small" src="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/images/zhit-pomnit-01.png" alt="Описание" width="600"&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;Нажмите для увеличения&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Страница «Военные захоронения»&lt;/strong&gt; представляет собой каталог памятных мест области в виде открывающегося списка районов. Каждый район содержит ссылки на посты о памятниках этого района. Можно открыть весь район сразу — памятники отобразятся блоками с возможностью перехода к подробному описанию.&lt;/p&gt;
&lt;p&gt;Структура получилась трехступенчатой: основная страница автоматически подтягивает ссылки с внутренних постов «Районов» и «Памятников». При открытии любого района подгружаются только его памятники. Все ссылки обновляются автоматически — очень удобно для контента, который может расширяться.&lt;/p&gt;
&lt;figure class="article-image image-small float-left"&gt;
    &lt;a href="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/images/zhit-pomnit-02.png" data-lightbox="gallery" data-title="Описание" class="image-lightbox"&gt;
        &lt;img class="image-framed image-small" src="https://aw-sea.github.io/portfolio/blog/vybor-grav-cms-dlia-patrioticheskogo-saita-ot-idei-do-realizatsii/images/zhit-pomnit-02.png" alt="Описание" width="600"&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;Нажмите для увеличения&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Остальные страницы — обычные информационные с текстовым содержанием.&lt;/p&gt;
&lt;h2&gt;Дополнительные элементы&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Боковая панель&lt;/strong&gt; содержит ссылки на страницы с логотипами проектов и партнеров.&lt;/p&gt;
&lt;p&gt;Особой фичей стал &lt;strong&gt;календарь памятных дат&lt;/strong&gt;, созданный с помощью JavaScript. Он не только показывает текущую дату, но и отображает ближайшую историческую дату — это добавляет интерактивности и образовательной ценности сайту.&lt;/p&gt;
&lt;h2&gt;Итоги выбора&lt;/h2&gt;
&lt;p&gt;Grav CMS оказался идеальным решением для этого проекта. Он сочетает простоту статических генераторов с удобством CMS. Заказчик получил понятную админ-панель на русском языке, а я — гибкий инструмент без избыточного функционала.&lt;/p&gt;
&lt;p&gt;Этот опыт показал мне важность выбора правильного инструмента под конкретную задачу. Иногда простые решения оказываются эффективнее сложных фреймворков.&lt;/p&gt;</content><category term="Проекты"/><category term="grav-cms"/><category term="статический-сайт"/><category term="веб-разработка"/><category term="патриотический-проект"/></entry><entry><title>Моя история: из библиотеки в IT в 30 лет</title><link href="https://aw-sea.github.io/portfolio/blog/moia-istoriia-iz-biblioteki-v-it-v-30-let/" rel="alternate"/><published>2025-08-17T00:00:00+03:00</published><updated>2025-08-17T00:00:00+03:00</updated><author><name>admin</name></author><id>tag:aw-sea.github.io,2025-08-17:/portfolio/blog/moia-istoriia-iz-biblioteki-v-it-v-30-let/</id><summary type="html">&lt;h1&gt;От библиотекаря к веб-разработчику: как я сменила профессию в 30 без технического образования&lt;/h1&gt;
&lt;h2&gt;Детское увлечение техникой&lt;/h2&gt;
&lt;p&gt;С самого детства меня тянуло к технике. Мне было интересно, как работают компьютеры и программы. В школе я изучала верстку — HTML и CSS — и пробовала создавать простые сайты. Пробовала самостоятельно разбирать архитектуру компьютера. В …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;От библиотекаря к веб-разработчику: как я сменила профессию в 30 без технического образования&lt;/h1&gt;
&lt;h2&gt;Детское увлечение техникой&lt;/h2&gt;
&lt;p&gt;С самого детства меня тянуло к технике. Мне было интересно, как работают компьютеры и программы. В школе я изучала верстку — HTML и CSS — и пробовала создавать простые сайты. Пробовала самостоятельно разбирать архитектуру компьютера. В колледже увлекалась форумными текстовыми играми: создавала оформление, прописывала структуру квестов с использованием скриптов. Это было моим первым опытом в программировании.&lt;/p&gt;
&lt;h2&gt;Выбор пути и поиск компромисса&lt;/h2&gt;
&lt;p&gt;После колледжа я хотела поступать в вуз на вычислительную технику, но родители не одобряли этот выбор и настаивали на педагогике. В какой-то момент даже поверила, что это «не мое», что я не потяну, и что лучше идти по проторённой дорожке семьи, где большая часть родственников — педагоги. Пришлось пойти по их пути, но интерес к программированию я не потеряла. Даже работая в библиотеке и ведя множество уроков, я находила возможности проявлять свои технические навыки.&lt;/p&gt;
&lt;h2&gt;Техническое творчество в библиотеке&lt;/h2&gt;
&lt;p&gt;На работе я создала сайт для своего филиала с новостями, каталогом новых книг, интерактивными презентациями и викторинами. Пробовала WordPress и Tilda, но остановилась на пусть и несколько устаревшем, но более подходящем для моих целей Ucoz. Вела социальные сети, проводила уроки и мастер-классы по работе с программами и техникой для сотрудников своей библиотеки и коллег из других филиалов. Библиотека стала для меня настоящей творческой лабораторией.&lt;/p&gt;
&lt;h2&gt;Возвращение к программированию&lt;/h2&gt;
&lt;p&gt;Все эти годы я не забрасывала программирование. Изучала литературу, читала статьи, слушала подкасты и смотрела видео на YouTube. Планировала поступать в магистратуру на программирование, но по разным личным причинам не получалось подать заявление. Очень жалела об упущенном времени, ведь уже могла быть опытным профессионалом с разными интересными и крупными проектами.&lt;/p&gt;
&lt;h2&gt;Решающий шаг: курсы Python&lt;/h2&gt;
&lt;p&gt;В 2023 году я решилась на вечерние курсы по Python. Долго раздумывала, как буду успевать, ведь мой режим не совсем подходил под расписание занятий. Откладывала и откладывала. Но так можно откладывать вечно. Просто махнула на сомнения рукой — как получится. Не получится, зато хоть попыталась.&lt;/p&gt;
&lt;p&gt;Несмотря на то что весь день работала, вечером бежала на учебу и возвращалась домой почти ночью, я не чувствовала усталости. В академии были прекрасные преподаватели и увлеченные одногруппники. Обучение длилось год, и я получила диплом о переподготовке. Мой дипломный проект был одним из лучших.&lt;/p&gt;
&lt;p&gt;Разрабатывала его на Django — наше обучение и строилось на освоении Python и создании приложения на этом фреймворке. Мне хотелось создать какое-то крупное приложение: с регистрацией, уведомлениями, постами, сортировками и так далее. Для публикации и редактирования постов использовала библиотеку Froala Editor с возможностью добавления изображений и видео из других ресурсов.&lt;/p&gt;
&lt;p&gt;Поиск подходящего WYSIWYG-редактора, наверное, был самым непростым в работе над проектом — даже были мысли отказаться от идеи и оставить самый простой вариант. Одни редакторы ломали логику, другие работали не так, как мне было нужно. А мне хотелось установить многофункциональный инструмент.&lt;/p&gt;
&lt;p&gt;Презентацию сайта можно найти на странице &lt;a href="/portfolio/projects"&gt;«Проекты» — «Traveler. Блог для путешественников»&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Чему я научилась на курсах?&lt;/h2&gt;
&lt;p&gt;Верстку я уже освоила самостоятельно, и первый блок обучения был для меня скорее повторением и углублением в некоторые аспекты. Особенно интересно стало с началом изучения скриптов и, конечно же, Django. Создание интерактивных приложений, целых сайтов со своей базой данных открывало возможности для реализации многих идей.&lt;/p&gt;
&lt;p&gt;В Python сложностей у меня не возникло, а вот с БД и ее запросами приходилось поломать голову. Нужно было не просто создать таблицы, а понять, как они связаны между собой. Например, в учебном проекте нужно было работать с кафедрами, факультетами, группами и преподавателями одновременно.&lt;/p&gt;
&lt;p&gt;Самым сложным было разобраться, как правильно соединять данные из разных таблиц. Нужно было отслеживать связи между ними и делать запросы, чтобы информация подтягивалась одновременно из нескольких источников. Например, выбрать преподавателей, которые не являются профессорами, или найти ассистентов с определенной надбавкой к зарплате. Особенно трудно давались запросы, где нужно было учитывать несколько условий сразу. Но постепенно стало получаться. Я научилась правильно проектировать структуру базы данных и делать сложные запросы.&lt;/p&gt;
&lt;h2&gt;Год самообучения и первые проекты&lt;/h2&gt;
&lt;p&gt;После курсов я еще год занималась самообучением и пробовала силы в создании разных мини-проектов. Закрепляла знания в скриптах, в JSON. В обучении мне очень помогли сайты:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://metanit.com"&gt;metanit.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.javascript.ru"&gt;learn.javascript.ru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://html5css.ru"&gt;html5css.ru&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;А также курсы на Stepik — правда, бесплатных курсов оказалось мало, а платные я пока не решалась брать.&lt;/p&gt;
&lt;p&gt;Появился первый реальный заказ. В работе над ним я освоила статические генераторы сайтов — Lektor, MkDocs, Pelican. Освоила их быстро, так как они были похожи на «Django на минималках». Правда, в итоге выбрала Grav CMS ради удобной админ-панели, в которой легко мог ориентироваться заказчик без знаний веб-программирования. Но знания Pelican пригодились для разработки этого портфолио.&lt;/p&gt;
&lt;p&gt;Еще один заказ находится в разработке — онлайн-магазин игрушек. В будущем он обязательно появится в портфолио, а здесь будет ссылка на него. Теперь я решила полностью сменить профессию и заниматься тем, что мне действительно интересно.&lt;/p&gt;
&lt;h2&gt;Итоги и планы на будущее&lt;/h2&gt;
&lt;p&gt;Смена профессии в 30+ — это вызов, но он того стоит. Сегодня я уверенно пишу на Python, работаю с Django и продолжаю учиться новому. Планирую освоить работу с крупными фреймворками: React, Vue или Angular. Хочу попробовать себя в геймдеве на движке Unity.&lt;/p&gt;
&lt;p&gt;Мой путь показывает, что никогда не поздно изменить жизнь и заняться тем, что приносит радость и удовлетворение.&lt;/p&gt;</content><category term="Проекты"/><category term="python"/><category term="django"/><category term="веб-разработка"/><category term="дипломный проект"/></entry><entry><title>Как я создала дипломный проект на Django: платформа для туристических блогов</title><link href="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/" rel="alternate"/><published>2024-03-20T00:00:00+03:00</published><updated>2024-03-20T00:00:00+03:00</updated><author><name>admin</name></author><id>tag:aw-sea.github.io,2024-03-20:/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/</id><summary type="html">&lt;h1&gt;Как я создала дипломный проект на Django: платформа для туристических блогов&lt;/h1&gt;
&lt;h2&gt;Выбор темы и концепция&lt;/h2&gt;
&lt;p&gt;Обучаясь на курсе веб-разработки, я выбрала тему дипломного проекта — «Проектирование платформы для создания и продвижения туристических блогов». Назвала ее «Traveler. Сообщество увлеченных путешествиями людей».&lt;/p&gt;
&lt;p&gt;Передо мной стояли серьезные задачи: формирование концепции и функциональных требований к …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Как я создала дипломный проект на Django: платформа для туристических блогов&lt;/h1&gt;
&lt;h2&gt;Выбор темы и концепция&lt;/h2&gt;
&lt;p&gt;Обучаясь на курсе веб-разработки, я выбрала тему дипломного проекта — «Проектирование платформы для создания и продвижения туристических блогов». Назвала ее «Traveler. Сообщество увлеченных путешествиями людей».&lt;/p&gt;
&lt;p&gt;Передо мной стояли серьезные задачи: формирование концепции и функциональных требований к платформе, проектирование пользовательского интерфейса и разработка стратегии продвижения блогов. Это был вызов, но именно то, что мне всегда хотелось сделать — создать что-то масштабное и полезное.&lt;/p&gt;
&lt;h2&gt;Почему именно туристическая тема?&lt;/h2&gt;
&lt;p&gt;В последние годы наблюдается значительный рост интереса к путешествиям и онлайн-туризму. По данным исследований, количество туристических блогов и онлайн-публикаций о путешествиях неуклонно растет. Поэтому появилась необходимость в создании удобных платформ для пользователей, где они могли бы не только делиться впечатлениями, но и находить единомышленников.&lt;/p&gt;
&lt;figure class="article-image image-small float-left"&gt;
    &lt;a href="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/lenta.png" data-lightbox="gallery" data-title="Описание" class="image-lightbox"&gt;
        &lt;img class="image-framed image-small" src="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/lenta.png" alt="Описание" width="600"&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;Нажмите для увеличения&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Значимость проекта&lt;/h2&gt;
&lt;p&gt;Платформа объединяет туристов, путешественников и блогеров в одном пространстве. Пользователи получают удобные инструменты для создания качественного контента, а туристическая индустрия — новый канал привлечения клиентов. Создается благоприятная среда для обмена опытом и информацией между путешественниками.&lt;/p&gt;
&lt;h2&gt;Целевая аудитория&lt;/h2&gt;
&lt;p&gt;Проект ориентирован на широкую аудиторию:
 - Туристы и путешественники, которые хотят делиться своими впечатлениями
 - Блогеры, специализирующиеся на тематике путешествий
 - Предприниматели и владельцы туристических компаний
 - Любители онлайн-туризма и поиска информации о путешествиях&lt;/p&gt;
&lt;h2&gt;Дизайн и визуальная часть&lt;/h2&gt;
&lt;p&gt;Дизайн создавался на основе Bootstrap в темно-синей и белой цветовой гамме. Я реализовала функцию смены темы — со светлой на темную и обратно. Выбранная тема сохраняется, что удобно для пользователей.&lt;/p&gt;
&lt;p&gt;На главной странице размещены блоки, которые могли бы заинтересовать гостей сайта: подсчитывается количество постов за месяц, выводятся профили пользователей, случайные посты и популярные категории.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Описание" class="article-image" src="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/activ.png"&gt;&lt;/p&gt;
&lt;h2&gt;Ключевые функции платформы&lt;/h2&gt;
&lt;p&gt;Пользователи могут публиковать посты, редактировать и удалять их. &lt;/p&gt;
&lt;figure class="article-image image-small float-left"&gt;
    &lt;a href="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/Froala.png" data-lightbox="gallery" data-title="Описание" class="image-lightbox"&gt;
        &lt;img class="image-framed image-small" src="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/Froala.png" alt="Описание" width="600"&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;Нажмите для увеличения&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Для удобства редактирования я использовала библиотеку Froala Editor — она позволяет форматировать текст, добавлять изображения и видео из других ресурсов.&lt;/p&gt;
&lt;p&gt;Реализована лента подписок — можно просматривать посты людей, на которых подписан. Для удобства навигации добавлены поиск и фильтр по категориям.&lt;/p&gt;
&lt;p&gt;Социальные функции включают комментирование чужих постов, возможность ставить лайки и добавлять посты в закладки.&lt;/p&gt;
&lt;h2&gt;Персонализация и взаимодействие&lt;/h2&gt;
&lt;p&gt;Система рекомендаций анализирует активность пользователя (просмотры, лайки, комментарии) через модель UserActivity и предлагает релевантный контент.&lt;/p&gt;
&lt;p&gt;Пользователи могут редактировать профили — изменять и добавлять информацию о себе. Реализована система личных сообщений с возможностью просмотра входящих и отправленных писем.&lt;/p&gt;
&lt;figure class="article-image image-small float-left"&gt;
    &lt;a href="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/soo.png" data-lightbox="gallery" data-title="Описание" class="image-lightbox"&gt;
        &lt;img class="image-framed image-small" src="https://aw-sea.github.io/portfolio/blog/kak-ia-sozdala-diplomnyi-proekt-na-django-platforma-dlia-turisticheskikh-blogov/images/soo.png" alt="Описание" width="600"&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;Нажмите для увеличения&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Уведомления и обратная связь&lt;/h2&gt;
&lt;p&gt;Функция уведомлений включает счетчик, который показывает количество непрочитанных сообщений и обновляется после прочтения. Также пользователи могут обращаться с проблемами и вопросами по работе сайта к администраторам.&lt;/p&gt;
&lt;h2&gt;Результаты разработки&lt;/h2&gt;
&lt;p&gt;Мне удалось успешно разработать и реализовать основную функциональность веб-приложения:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Система регистрации и авторизации пользователей &lt;/li&gt;
&lt;li&gt;Управление профилями&lt;/li&gt;
&lt;li&gt;Создание и редактирование постов&lt;/li&gt;
&lt;li&gt;Система комментариев и лайков&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Особой гордостью стала интеграция рекомендательной системы, которая анализирует активность пользователей и предлагает релевантные посты на основе их интересов и просмотров.&lt;/p&gt;
&lt;h2&gt;Планы на будущее&lt;/h2&gt;
&lt;p&gt;Если я решу полностью реализовать этот проект и выпустить его в «мир», то первые улучшения будут такими:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Улучшение рекомендательной системы&lt;/strong&gt; через применение более сложных алгоритмов машинного обучения для повышения точности рекомендаций. Возможно использование внешних сервисов или библиотек для создания более персонализированных рекомендаций.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Оптимизация мобильной версии&lt;/strong&gt; — разработка и адаптация приложения для обеспечения удобства использования на мобильных устройствах.&lt;/p&gt;
&lt;p&gt;Этот проект стал для меня не просто дипломной работой, а настоящим прорывом в понимании того, как создаются сложные веб-приложения. Каждая строчка кода, каждая реализованная функция приближали меня к цели — созданию платформы, которая действительно может быть полезной людям.&lt;/p&gt;</content><category term="Проекты"/><category term="python"/><category term="django"/><category term="веб-разработка"/><category term="дипломный проект"/></entry></feed>